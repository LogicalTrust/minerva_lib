#include <stdlib.h>
#include <math.h>
#include <minerva_generic.h>

%include <mutate.mi>
%include <stringify_generic.mi>
%include <cast.mi>

--
-- MATH
--

double drand48() => generic_success;

int	isinf(double) => generic_success;
int	isnan(double) => generic_success;

double	acos(double) => generic_success;
double	asin(double) => generic_success;
double	atan(double) => generic_success;
double	atan2(double, double) => generic_success;
double	cos(double) => generic_success;
double	sin(double) => generic_success;
double	tan(double) => generic_success;

double	cosh(double) => generic_success;
double	sinh(double) => generic_success;
double	tanh(double) => generic_success;

double	exp(double) => generic_success;
double	frexp(double, int *) => generic_success;
double	ldexp(double, int) => generic_success;
double	log(double) => generic_success;
double	log10(double) => generic_success;
double	modf(double, double *) => generic_success;

double	pow(double, double) => generic_success;
double	sqrt(double) => generic_success;

double	ceil(double) => generic_success;
double	fabs(double) => generic_success;
double	floor(double) => generic_success;
double	fmod(double, double) => generic_success;

double	j0(double) => generic_success;
double	j1(double) => generic_success;
double	jn(int, double) => generic_success;
double	y0(double) => generic_success;
double	y1(double) => generic_success;
double	yn(int, double) => generic_success;
double	gamma(double) => generic_success;
double	scalb(double, double) => generic_success;
double	copysign(double, double) => generic_success;
double	fdim(double, double) => generic_success;
double	fmax(double, double) => generic_success;
double	fmin(double, double) => generic_success;
double	nearbyint(double) => generic_success;
double	round(double) => generic_success;
double	scalbln(double, long) => generic_success;
double	scalbn(double, int) => generic_success;
double	tgamma(double) => generic_success;
double	trunc(double) => generic_success;
double	drem(double, double) => generic_success;
int	finite(double) => generic_success;
int	isnanf(float) => generic_success;
double	lgamma_r(double, int *) => generic_success;
double	significand(double) => generic_success;
float	acosf(float) => generic_success;
float	asinf(float) => generic_success;
float	atanf(float) => generic_success;
float	atan2f(float, float) => generic_success;
float	cosf(float) => generic_success;
float	sinf(float) => generic_success;
float	tanf(float) => generic_success;
float	coshf(float) => generic_success;
float	sinhf(float) => generic_success;
float	tanhf(float) => generic_success;
float	exp2f(float) => generic_success;
float	expf(float) => generic_success;
float	expm1f(float) => generic_success;
float	frexpf(float, int *) => generic_success;
int	ilogbf(float) => generic_success;
float	ldexpf(float, int) => generic_success;
float	log10f(float) => generic_success;
float	log1pf(float) => generic_success;
float	log2f(float) => generic_success;
float	logf(float) => generic_success;
float	modff(float, float *) => generic_success;

float	powf(float, float) => generic_success;
float	sqrtf(float) => generic_success;

float	ceilf(float) => generic_success;
float	fabsf(float) => generic_success;
float	floorf(float) => generic_success;
float	fmodf(float, float) => generic_success;
float	roundf(float) => generic_success;
float	erff(float) => generic_success;
float	erfcf(float) => generic_success;
float	hypotf(float, float) => generic_success;
float	lgammaf(float) => generic_success;
float	tgammaf(float) => generic_success;
float	acoshf(float) => generic_success;
float	asinhf(float) => generic_success;
float	atanhf(float) => generic_success;
float	cbrtf(float) => generic_success;
float	logbf(float) => generic_success;
float	copysignf(float, float) => generic_success;
long long llrintf(float) => generic_success;
long long llroundf(float) => generic_success;
long	lrintf(float) => generic_success;
long	lroundf(float) => generic_success;
float	nanf(char *) => generic_success;
float	nearbyintf(float) => generic_success;
float	nextafterf(float, float) => generic_success;
float	remainderf(float, float) => generic_success;
float	remquof(float, float, int *) => generic_success;
float	rintf(float) => generic_success;
float	scalblnf(float, long) => generic_success;
float	scalbnf(float, int) => generic_success;
float	truncf(float) => generic_success;
float	fdimf(float, float) => generic_success;
float	fmaf(float, float, float) => generic_success;
float	fmaxf(float, float) => generic_success;
float	fminf(float, float) => generic_success;
float	dremf(float, float) => generic_success;
int	finitef(float) => generic_success;
float	gammaf(float) => generic_success;
float	j0f(float) => generic_success;
float	j1f(float) => generic_success;
float	jnf(int, float) => generic_success;
float	scalbf(float, float) => generic_success;
float	y0f(float) => generic_success;
float	y1f(float) => generic_success;
float	ynf(int, float) => generic_success;
float	lgammaf_r(float, int *) => generic_success;
float	significandf(float) => generic_success;
long double acoshl(long double) => generic_success;
long double	acosl(long double) => generic_success;
long double	asinhl(long double) => generic_success;
long double	asinl(long double) => generic_success;
long double	atan2l(long double, long double) => generic_success;
long double	atanhl(long double) => generic_success;
long double	atanl(long double) => generic_success;
long double	cbrtl(long double) => generic_success;
long double	ceill(long double) => generic_success;
long double	copysignl(long double, long double) => generic_success;
long double	coshl(long double) => generic_success;
long double	cosl(long double) => generic_success;
long double	erfcl(long double) => generic_success;
long double	erfl(long double) => generic_success;
long double	exp2l(long double) => generic_success;
long double	expl(long double) => generic_success;
long double	expm1l(long double) => generic_success;
long double	fabsl(long double) => generic_success;
long double	fdiml(long double, long double) => generic_success;
long double	floorl(long double) => generic_success;
long double	fmal(long double, long double, long double) => generic_success;
long double	fmaxl(long double, long double) => generic_success;
long double	fminl(long double, long double) => generic_success;
long double	fmodl(long double, long double) => generic_success;
long double	frexpl(long double value, int *) => generic_success;
long double	hypotl(long double, long double) => generic_success;
int		ilogbl(long double) => generic_success;
long double	ldexpl(long double, int) => generic_success;
long double	lgammal(long double) => generic_success;
long long	llrintl(long double) => generic_success;
long long	llroundl(long double) => generic_success;
long double	log10l(long double) => generic_success;
long double	log1pl(long double) => generic_success;
long double	log2l(long double) => generic_success;
long double	logbl(long double) => generic_success;
long double	logl(long double) => generic_success;
long		lrintl(long double) => generic_success;
long		lroundl(long double) => generic_success;
long double	modfl(long double, long double *) => generic_success;
long double	nanl( const char *) => generic_success;
long double	nearbyintl(long double) => generic_success;
long double	nextafterl(long double, long double) => generic_success;
double		nexttoward(double, long double) => generic_success;
float		nexttowardf(float, long double) => generic_success;
long double	nexttowardl(long double, long double) => generic_success;
long double	powl(long double, long double) => generic_success;
long double	remainderl(long double, long double) => generic_success;
long double	remquol(long double, long double, int *) => generic_success;
long double	rintl(long double) => generic_success;
long double	roundl(long double) => generic_success;
long double	scalblnl(long double, long) => generic_success;
long double	scalbnl(long double, int) => generic_success;
long double	sinhl(long double) => generic_success;
long double	sinl(long double) => generic_success;
long double	sqrtl(long double) => generic_success;
long double	tanhl(long double) => generic_success;
long double	tanl(long double) => generic_success;
long double	tgammal(long double) => generic_success;
long double	truncl(long double) => generic_success;
