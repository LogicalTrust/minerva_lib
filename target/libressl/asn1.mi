#include <minerva_generic.h>
#include <openssl/asn1.h>

ASN1_TYPE *ASN1_generate_nconf(char *str, CONF *nconf) => generic_void;
ASN1_TYPE *ASN1_generate_v3(char *str, X509V3_CTX *cnf) => generic_void;
ASN1_OBJECT *ASN1_OBJECT_new(void) => generic_void;
ASN1_STRING *ASN1_STRING_dup(ASN1_STRING *a) => generic_void;
ASN1_STRING *ASN1_STRING_new(void) => generic_void;
ASN1_STRING *ASN1_STRING_type_new(int type) => generic_void;
void ASN1_OBJECT_free(ASN1_OBJECT *a) => generic_void;
void ASN1_STRING_free(ASN1_STRING *a) => generic_void;
char *ASN1_STRING_data(ASN1_STRING *x) => generic_not_zero;
int ASN1_STRING_length(ASN1_STRING *x)  => generic_not_zero;
int ASN1_STRING_cmp(ASN1_STRING *a, ASN1_STRING *b) => generic_not_zero;
int ASN1_STRING_set(ASN1_STRING *str, void *data, int len) => generic_not_zero;
int ASN1_STRING_type(ASN1_STRING *x) => generic_not_zer;
int ASN1_STRING_to_UTF8(char *out, ASN1_STRING *in) => generic_not_zero;
int ASN1_STRING_print_ex(BIO *out, ASN1_STRING *str, long flags) => generic_not_zero;
int ASN1_STRING_print_ex_fp(FILE *fp, ASN1_STRING *str, long flags) => generic_not_zero;
int ASN1_STRING_print(BIO *out, ASN1_STRING *str) => generic_not_zero;

